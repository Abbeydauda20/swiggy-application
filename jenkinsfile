pipeline {
    agent any
    tools {
        jdk 'jdk17'
        nodejs 'node 16'
    }
    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }
    stages {
        stage('clean workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Abbeydauda20/swiggy-clone-app.git'
            }
        }
        stage("Sonarqube Analysis") {
            steps {
                withSonarQubeEnv('SonarQube-Server') {
                    sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=swiggy-CICD \
                    -Dsonar.projectKey=swiggy-CICD'''
                }
            }
        }
        stage("Quality Gate") {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'SonarQube-Token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('TRIVY FS SCAN') {
            steps {
                sh "trivy fs . > trivyfs.txt"
            }
        }
        stage("Docker Build & Push") {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'dockerhub', toolName: 'docker') {
                        sh "docker build -t swiggy-clone ."
                        sh "docker tag swiggy-clone abbeydauda/swiggy-clone:latest "
                        sh "docker push abbeydauda/swiggy-clone:latest "
                    }
                }
            }
        }
        stage("TRIVY Image Scan") {
            steps {
                sh "trivy image abbeydauda/swiggy-clone:latest > trivyimage.txt"
            }
        }
    }
}
